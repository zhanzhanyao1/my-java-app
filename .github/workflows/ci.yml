name: Java项目自动部署流程（CI/CD）

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_deploy:  # ✅ ID 保持英文（不能中文）
    name: 构建并部署 🚀   # ✅ 中文展示没问题
    runs-on: ubuntu-latest

    steps:
      - name: ✅ 拉取项目源码
        uses: actions/checkout@v2

      - name: ☕ 安装 Java 17 环境
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔧 使用 Maven 构建项目
        run: mvn clean install

      - name: 🐳 构建 Docker 镜像
        run: docker build -t zhanyaodocker/my-java-app:latest .

      - name: 🔐 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 🚀 推送镜像到 Docker Hub
        run: docker push zhanyaodocker/my-java-app:latest

      - name: 📦 SSH 登录 EC2 实例并部署容器
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            echo "🛑 停止旧容器（如果有）"
            docker stop my-java-app || true
            docker rm my-java-app || true
            
            echo "🔍 检查端口占用（8080）并释放"
            PID=$(lsof -ti:8080) && [ -n "$PID" ] && kill -9 $PID || echo "Port 8080 is free"
            
            echo "📥 拉取最新镜像"
            docker pull zhanyaodocker/my-java-app:latest
            
            echo "🚀 启动新容器"
            docker run -d -p 8080:8080 --name my-java-app zhanyaodocker/my-java-app:latest
            
            echo "✅ 当前运行的容器列表："
            docker ps
